spring:
  profiles:
    active: local,mysql-default-db,logging-console-debug,ipm # scheduling #, initial #, bcrypt-encoder, encode-password-initial, datasource-filter-sample
  application:
    name: ${METATRON_NAME:metatron}
  datasource:
    initialize: false
  http:
    multipart:
      max-file-size: 300Mb
      max-request-size: 300Mb
  mvc:
    favicon:
        enabled: false
  boot:
    admin:
      client:
        enabled: false
server:
  port: 8180
  display-name: polaris
  error:
    whitelabel:
      enabled: false
  tomcat:
    ajp:
      enabled: false
      protocol: AJP/1.3
      port: 8280
    # https://stackoverflow.com/questions/43264890/after-upgrade-from-spring-boot-1-2-to-1-5-2-filenotfoundexception-during-tomcat
    additional-tld-skip-patterns: "*.jar"

logging:
  config: classpath:logback-console.xml

endpoints:
  enabled: false

polaris:
  title: metatron
  common:
    manualLinks:
     ko: file://${METATRON_HOME:/metatron}/doc/metatronDiscovery.user.manual.ko.pdf
     en: file://${METATRON_HOME:/metatron}/doc/metatronDiscovery.user.manual.en.pdf
  widget:
    mapView:
      defaultBaseMap: Light
      overrideBaseMap: false
  oauth2:
    permitAll:
      -
        method: POST
        api: /api/users/signup
      -
        method: POST
        api: /api/users/password/reset
      -
        method: GET
        api: /api/common/manual/download
      -
        method: GET
        api: /api/users/**/duplicated
      -
        method: GET
        api: /api/jobs/**
      -
        method: POST
        api: /api/datasources/*/data
      -
        method: POST
        api: /api/dashboards/*/data
      -
        method: POST
        api: /api/widgets/*/data
      -
        method: POST
        api: /api/auth/**
      -
        method: GET
        api: /api/auth/**
      -
        method: POST
        api: /api/admin/reindex
      -
        method: GET
        api: /api/admin/**
      -
        method: POST
        api: /api/images/**
  datasource:
    connections:
      ORACLE: ["ENGINE", "LIVE"]
      MYSQL: ["ENGINE", "LIVE"]
      POSTGRESQL: ["ENGINE", "LIVE"]
      HIVE: ["ENGINE", "LIVE"]
      PRESTO: ["LIVE"]
      PHOENIX: ["LIVE"]
  engine:
    api:
      query:
        target: broker
        method: POST
        uri: /druid/v2/
      load:
        target: broker
        method: POST
        uri: /druid/v2/load/
      getProgress:
        target: broker
        method: GET
        uri: /druid/v2/progress/{queryId}
      getLoadDatasources:
        target: broker
        method: GET
        uri: /druid/v2/datasources/local
      getLoadDatasourceInfo:
        target: broker
        method: GET
        uri: /druid/v2/datasources/local/{datasourceName}/coverage
      deleteLoadDatasources:
        target: broker
        method: DELETE
        uri: /druid/v2/datasources/local/{datasourceName}
      cancelQuery:
        target: broker
        method: DELETE
        uri: /druid/v2/{queryId}
      ingestion:
        target: overlord
        method: POST
        uri: /druid/indexer/v1/task
      ingestionStatus:
        target: overlord
        method: GET
        uri: /druid/indexer/v1/task/{taskId}/status
      ingestionLog:
        target: overlord
        method: GET
        uri: /druid/indexer/v1/task/{taskId}/log
      ingestionShutdown:
        target: overlord
        method: POST
        uri: /druid/indexer/v1/task/{taskId}/shutdown
      supervisor:
        target: overlord
        method: POST
        uri: /druid/indexer/v1/supervisor
      supervisorStatus:
        target: overlord
        method: GET
        uri: /druid/indexer/v1/supervisor/{taskId}/status
      supervisorShutdown:
        target: overlord
        method: POST
        uri: /druid/indexer/v1/supervisor/{taskId}/shutdown
      supervisorReset:
        target: overlord
        method: POST
        uri: /druid/indexer/v1/supervisor/{taskId}/reset
      workerStatus:
        target: overlord
        method: GET
        uri: /druid/indexer/v1/workers
      getDatasources:
        target: coordinator
        method: GET
        uri: /druid/coordinator/v1/datasources
      datasourceStatus:
        target: coordinator
        method: GET
        uri: /druid/coordinator/v1/datasources/{datasourceId}
      datasourceDisable:
        target: coordinator
        method: DELETE
        uri: /druid/coordinator/v1/datasources/{datasourceId}
      datasourcePurge:
        target: coordinator
        method: DELETE
        uri: /druid/coordinator/v1/datasources/{datasourceId}/purge
  cache:
    configFile: default-configs/default-jgroups-tcp.xml
#  cors:
#    -
#      mapping: "/api/**"
#      allowedOrigins: "*"
#      allowedMethods: "GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE"       # comma seperated
#      allowedHeaders: "*"
#      exposedHeaders: "*"
#      allowCredentials: false
#      maxAge: 3600
---
spring:
  profiles: initial
  datasource:
    initialize: true
  jpa:
    properties:
      hibernate:
        hbm2ddl:
          auto: create
          import_files: /scripts/default.sql,/scripts/default_expressions.sql,/scripts/default_datasource_ingestion_options.sql
          import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
---
spring:
  profiles: local
  mail:
    host: localhost
    port: 25
    username:
    password:
polaris:
  format:
    datetimes:
      - 'yy-MM-dd'
      - 'dd/MM/yyyy'
  chart:
    profile: default
  datasource:
    ingestion:
      retries:
        delay: 3
        maxDelay: 90
        maxDuration : 3600
  engine:
    hostname:
      broker: http://localhost:8082
      overlord: http://localhost:8090
      coordinator: http://localhost:8081
    ingestion:
      loader:
        remoteType: LOCAL
        localBaseDir: ${java.io.tmpdir:-/tmp}
    query:
      loader:
        remoteType: LOCAL
        localBaseDir: ${java.io.tmpdir:-/tmp}
  notebook:
    baseDir: ${java.io.tmpdir:-/tmp}
    sparkDir: /usr/local/spark
  mail:
    admin: admin@metatron.com
    baseUrl: http://localhost:8180
  workbench:
    defaultResultSize: 1000
    maxResultSize: 1000000
    maxFetchSize: 1000
    tempHdfsPath: /tmp/hive
    tempCSVPath: /tmp
  geoserver:
    baseUrl: http://localhost:9090
    username: admin
    password: geoserver
    defaultWorkspace: metatron
  storage:
    stagedb:
      hostname: localhost
      port: 10000
      username: hive
      password: hive
      metastoreUri: thrift://localhost:9083
  dataprep:
    localBaseDir: ${user.home}/dataprep
    hadoopConfDir: /etc/hadoop/conf
#    stagingBaseDir: hdfs://localhost:9000/user/hive/dataprep
#    sampling:
#      timeout: 20
#    etl:
#      timeout: 36000
---
# (mysql DB 생성 script)
# create database polaris CHARACTER SET utf8;
# grant all privileges on polaris.* TO polaris@localhost identified by 'polaris';
# grant all privileges on polaris.* TO polaris@'%' identified by 'polaris';
#
# flush privileges;

spring:
  profiles: mysql-default-db
  datasource:
    platform: mysql
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/polaris_v2?useUnicode=true&amp;characterEncoding=utf8
    username: polaris
    password: polaris
    max-active: 50
    max-idle: 10
    min-idle: 10
    initial-size: 10
    test-on-borrow: false
    test-on-return: false
    test-while-idle: true
    max-wait: 1000
    validation-query: SELECT 1
  jpa:
    show-sql: false
    properties:
      hibernate:
        search:
          default:
            jmx_enabled: true
            generate_statistics: true
            directory_provider: filesystem
            indexBase: ${METATRON_INDEX_DIR:indexes}
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        hbm2ddl:
          auto: update
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        naming_strategy: org.hibernate.cfg.ImprovedNamingStrategy

---
spring:
  profiles: h2-default-db
  datasource:
    platform: h2
    driver-class-name: org.h2.Driver
    url: jdbc:h2:file:${METATRON_H2_DATA_DIR:.}/h2db/polaris;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: sa
    max-active: 10
  jpa:
    show-sql: false
    properties:
      hibernate:
        search:
          default:
            jmx_enabled: true
            generate_statistics: true
            directory_provider: filesystem
            indexBase: ${METATRON_INDEX_DIR:indexes}
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        hbm2ddl:
          auto: update
        dialect: org.hibernate.dialect.H2Dialect
        naming_strategy: org.hibernate.cfg.ImprovedNamingStrategy
  h2:
    console:
      enabled: false
      path: /console

---
spring:
  profiles: h2-in-memory-db
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:polaris;DB_CLOSE_DELAY\=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    platform: h2
  jpa:
    properties:
      hibernate:
        search:
          default:
            jmx_enabled: false
            generate_statistics: false
            directory_provider: ram
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
---
spring:
  profiles: logging-console-debug
logging:
  config: classpath:logback-console.xml

---
spring:
  profiles: logging-console-info
logging:
  config: classpath:logback-console-info.xml

---
spring:
  profiles: managements
  boot:
    admin:
      client:
        enabled: true
      context-path: /admin
      url: http://localhost:8180/admin
endpoints:
  actuator:
    enabled: true
  enabled: true
management:
  context-path: /managements
  security:
    enabled: false
  health:
    mail:
      enabled: false

# Password Encoder
---
spring:
  profiles: bcrypt-encoder
polaris:
  password-encoder: bcrypt

# 기 등록된 사용자의 Password를 BCrypt 암호화 처리
# 해당 프로필은 한번만 수행할것
---
spring:
  profiles: encode-password-initial

---
spring:
  profiles: datasource-filter-sample
polaris:
  datasource:
    default-filters:
      - criterionKey: CREATOR
        filterKey: createdBy
        filterValue: me
      - criterionKey: PUBLISH
        filterKey: published
        filterValue: true
        filterName: msg.storage.ui.criterion.open-data
  connections:
    default-filters:
      - criterionKey: PUBLISH
        filterKey: published
        filterValue: true
        filterName: msg.storage.ui.criterion.open-data

spring:
  profiles: ipm
polaris:
  ipm:
    upload:
      path: /tmp
    druid-host: localhost
    druid-port: 8082
    druid-com-pool: 10
    druid-icpm-pool: 30
    druid-epm-pool: 20
    ds-com: dcoc_com_cd
    ds-com-dim:
      com_cd, com_cd_nm
    ds-com-fltr: com_grp_cd
    ds-addr: dcoa_ldong_adong_mapp_addr
    ds-addr-interval: 2019-01-01T00:00:00.000Z/2019-12-31T00:00:00.000Z
    ds-addr-dim-sido:
      sido_seq, sido_nm, sido_cd
    ds-addr-dim-sgg:
      sgg_nm, sgg_cd
    ds-addr-fltr-sgg:
      sido_cd
    ds-addr-dim-dong:
      dong_nm, dong_cd
    ds-addr-fltr-dong:
      sido_cd, sgg_cd
    ds-hday: dccc_calendar_intg
    ds-hday-fltr: hday_yn
    ds-hday-interval: 1900-01-01T00:00:00.000Z/3000-01-01T00:00:00.000Z
    ds-team: dcoo_com_org_info
    ds-team-interval: 2019-01-01T00:00:00.000Z/2019-12-31T00:00:00.000Z
    ds-team-dim: hdofc_seq, hdofc_nm, hdofc_cd
  icpm:
    ds-icpm: msmf_cust_prfl_mst_sum_1d
    ds-icpm-dim-region: main_cell_ldong_cd
    ds-icpm-dim-sido:
      main_cell_sido_cd, main_cell_sido_nm
    ds-icpm-dim-sgg:
      main_cell_sgg_cd, main_cell_sgg_nm
    ds-icpm-fltr-sgg:
      main_cell_sido_cd
    ds-icpm-dim-dong:
      main_cell_dong_cd, main_cell_dong_nm
    ds-icpm-fltr-dong:
      main_cell_sido_cd, main_cell_sgg_cd
    ds-icpm-dim-age: user_estmt_age
    ds-icpm-dim-age-min: 0
    ds-icpm-dim-age-max: 80
    ds-icpm-dim-age-step: 5
    ds-icpm-dim-age-minwith: false
    ds-icpm-dim-age-maxwith: true
    ds-icpm-dim-vendor: ue_vend_nm
    ds-icpm-thr-vendor: 10
    ds-icpm-dim-model: ue_mdl_intg_nm
    ds-icpm-thr-model: 20
    ds-icpm-dim-team: main_cell_hdofc_cd
    ds-icpm-dim-traffic: trf_qty
    ds-icpm-dim-traffic-min: 0
    ds-icpm-dim-traffic-max: 10000
    ds-icpm-dim-cei: dat_cei_rcnt_day03_scor
    ds-icpm-dim-cei-min: 0
    ds-icpm-dim-cei-max: 100
    ds-icpm-dim-cei-label:
      95, 90, 85, 80, 75, 70, 65, 60, 55, 50, 0
    ds-icpm-excel-limit: 10000
    ds-icpm-excel-sheet-nm: 고객목록
    ds-icpm-excel-grid-wo-list:
      scrbr_sex_nm,scrbr_age,use_pred,inv_ldong_cd,bas_prpn_cd,mbrp_gr_nm,user_estmt_sex_nm,
      user_estmt_age,estmt_comp_ldong_cd,estmt_comp_wkdy_stay_time,estmt_comp_hday_stay_time,
      home_comp_expt_dist_val,wkdy_home_stay_time,hday_home_stay_time,skt_tm_acpt_scor,ob_tm_acpt_scor
  epm:
    equipment-enb:
      b01
    equipment-cell:
      b02
    vendor-com:
      c07, c08
    vendor-ss:
      c01, c04
    vendor-nsn:
      c02, c05
    vendor-elg:
      c03, c06
    vendor-ss-cd: BP0001001
    vendor-nsn-cd: BP0004416
    vendor-elg-cd: BP0004415
    ds-epm-com-enb-h: dpsn_lte_com_enb_stc_1h
    ds-epm-com-cell-h: dpsn_lte_com_cell_stc_1h
    ds-epm-ss-enb-h: dpsn_lte_ss_enb_stc_1h
    ds-epm-ss-cell-h: dpsn_lte_ss_cell_stc_1h
    ds-epm-nsn-enb-h: dpsn_lte_nsn_enb_stc_1h
    ds-epm-nsn-cell-h: dpsn_lte_nsn_cell_stc_1h
    ds-epm-elg-enb-h: dpsn_lte_elg_enb_stc_1h
    ds-epm-elg-cell-h: dpsn_lte_elg_cell_stc_1h
    ds-epm-com-enb-d: dpsn_lte_com_enb_stc_1d
    ds-epm-com-cell-d: dpsn_lte_com_cell_stc_1d
    ds-epm-ss-enb-d: dpsn_lte_ss_enb_stc_1d
    ds-epm-ss-cell-d: dpsn_lte_ss_cell_stc_1d
    ds-epm-nsn-enb-d: dpsn_lte_nsn_enb_stc_1d
    ds-epm-nsn-cell-d: dpsn_lte_nsn_cell_stc_1d
    ds-epm-elg-enb-d: dpsn_lte_elg_enb_stc_1d
    ds-epm-elg-cell-d: dpsn_lte_elg_cell_stc_1d
    ds-epm-org-dim-skt1:
      jrdt_hdofc_org_id, jrdt_hdofc_org_nm
    ds-epm-org-dim-skt2:
      jrdt_team_org_id, jrdt_team_org_nm
    ds-epm-org-fltr-skt2:
      jrdt_hdofc_org_id
    ds-epm-org-dim-skt3:
      op_team_org_id, op_team_org_nm
    ds-epm-org-fltr-skt3:
      jrdt_hdofc_org_id, jrdt_team_org_id
    ds-epm-org-dim-ons1:
      op_hdofc_org_id, op_hdofc_org_nm
    ds-epm-org-dim-ons2:
      op_team_org_id, op_team_org_nm
    ds-epm-org-fltr-ons2:
      op_hdofc_org_id
    ds-epm-addr-dim-sido:
      sido_cd, sido_nm
    ds-epm-addr-dim-sgg:
      sgg_cd, sgg_nm
    ds-epm-addr-fltr-sgg:
      sido_cd
    ds-epm-addr-dim-ldong:
      ldong_cd, ldong_nm
    ds-epm-addr-fltr-ldong:
      sido_cd, sgg_cd
    ds-epm-ems-dim:
      ems_eqp_id, ems_eqp_nm
    ds-epm-enb-dim:
      enb_id, eqp_nm
    ds-epm-mtso-dim:
      mtso_id, mtso_nm
    ds-epm-fltr-skt:
      jrdt_hdofc_org_id, jrdt_team_org_id, op_team_org_id
    ds-epm-fltr-ons:
      op_hdofc_org_id, op_team_org_id
    ds-epm-fltr-addr:
      sido_cd, sgg_cd, ldong_cd
    ds-epm-enb-fltr-ems:
      ems_eqp_id
    ds-epm-mtso-fltr-typ:
      mtso_typ_cd
    ds-epm-chart-eqp-dim-enb:
      eqp_nm, enb_id, ems_id, mtso_nm, sido_nm, sgg_nm, ldong_nm, jrdt_hdofc_org_nm, jrdt_team_org_nm, op_hdofc_org_nm, op_team_org_nm
    ds-epm-chart-eqp-dim-enb-nm:
      eNB명, eNB ID, EMS, 국사명, 시도, 시군구, 법정동, SKT 본부, 팀, ONS 본부, 팀
    ds-epm-chart-eqp-dim-cell:
      eqp_nm, enb_id, cell_num, ems_id, mtso_nm, sido_nm, sgg_nm, ldong_nm, jrdt_hdofc_org_nm, jrdt_team_org_nm, op_hdofc_org_nm, op_team_org_nm
    ds-epm-chart-eqp-dim-cell-nm:
      eNB명, eNB ID, Cell 번호, EMS, 국사명, 시도, 시군구, 법정동, SKT 본부, 팀, ONS 본부, 팀
    ds-epm-chart-limit: 10
    ds-epm-chart-thr: 10
    ds-epm-chart-excel-thr: 10000
    ds-epm-chart-excel-sheet-nm:
      장비목록, 1시간단위성능, 1일단위성능, 장비성능요약
  lpm:
    ds-lpm: dsmc_bypcell_flow_popul_inf_1h
    ds-lpm2: dcoa_ldong_adong_mapp_addr
    ds-lpm-grid-dim-nm: 시도, 시군구, 읍면동, 법정동 코드, eNB ID, Cell 번호, 사용자 성별, 사용자 연령, 종합CEI점수, 사용자 수
